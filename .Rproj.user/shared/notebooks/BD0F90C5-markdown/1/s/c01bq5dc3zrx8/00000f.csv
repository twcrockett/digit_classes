"0","#| warning: false"
"0","#| output: false"
"0","#| echo: false"
"0",""
"0","import numpy as np"
"0","import matplotlib.pyplot as plt"
"0","from sklearn.model_selection import KFold, ParameterGrid, StratifiedKFold"
"0","from sklearn.metrics import accuracy_score, classification_report, confusion_matrix"
"0","from sklearn.preprocessing import StandardScaler"
"0","from sklearn.pipeline import Pipeline"
"0","from sklearn.decomposition import TruncatedSVD"
"0","from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier"
"0","from sklearn.naive_bayes import GaussianNB"
"0","from sklearn.svm import SVC"
"0","from sklearn.neighbors import KNeighborsClassifier"
"0","from sklearn.discriminant_analysis import LinearDiscriminantAnalysis"
"0","from sklearn.linear_model import LogisticRegression"
"0","from sklearn.preprocessing import KBinsDiscretizer"
"0","from sklearn.decomposition import PCA"
"0","import tensorly as tl"
"0","from tensorly.decomposition import tucker"
"0","from tensorly.base import partial_unfold, fold"
"0","import time"
"0","from datetime import datetime"
"0","import pandas as pd"
"0","import seaborn as sns"
"0","import h5py"
"0","import matplotlib.pyplot as plt"
"0","from matplotlib.gridspec import GridSpec"
"0",""
"0","path = ""data/usps.h5"""
"0",""
"0","with h5py.File(path, 'r') as hf:"
"0","    train = hf.get('train')"
"0","    X_tr = train.get('data')[:]"
"0","    y_tr = train.get('target')[:]"
"0","    test = hf.get('test')"
"0","    X_te = test.get('data')[:]"
"0","    y_te = test.get('target')[:]"
"0","    "
"0","X = np.concatenate([X_tr, X_te], axis=0)"
"0","y = np.concatenate([y_tr, y_te], axis=0)"
"0",""
"0","# X = r.usps['data']"
"0","# y = np.array(r.usps['label']).astype(int)"
"0",""
"0","# all_indices = np.arange(X.shape[0])"
"0","# np.random.shuffle(all_indices)"
"0","# split_idx = int(.8 * X.shape[0])"
"0","# X_train = X[all_indices[:split_idx]]"
"0","# X_test = X[all_indices[split_idx:]]"
"0","# y_train = y[all_indices[:split_idx]]"
"0","# y_test = y[all_indices[split_idx:]]"
"0","# "
"0","# param_grids = {"
"0","#     'LinearRegression': {"
"0","#         'C': [0.01, 0.1]"
"0","#     },"
"0","#     'SVD': {"
"0","#         'n_components': [16],"
"0","#         'classifier': [""residual"", ""SVC""]"
"0","#     },"
"0","#     'HOSVD': {"
"0","#         'n_components_mode1': [4],"
"0","#         'n_components_mode2': [4],"
"0","#         'classifier': [""residual""]"
"0","#     },"
"0","#     'RandomForest': {"
"0","#         'n_estimators': [50],"
"0","#         'max_depth': [None],"
"0","#         'min_samples_split': [2]"
"0","#     },"
"0","#     'GB': {"
"0","#         'n_estimators': [50],"
"0","#         'learning_rate': [0.01],"
"0","#         'max_depth': [3]"
"0","#     },"
"0","#     'NaiveBayes': {"
"0","#         'var_smoothing': [1e-9]"
"0","#     },"
"0","#     'SVM': {"
"0","#         'C': [0.1],"
"0","#         'kernel': ['linear'],"
"0","#         'gamma': ['scale']"
"0","#     },"
"0","#     'KNN': {"
"0","#         'n_neighbors': [3],"
"0","#         'weights': ['uniform'],"
"0","#         'p': [1, 2]"
"0","#     },"
"0","#     'LDA': {"
"0","#         'solver': ['svd'],"
"0","#         'shrinkage': [None]"
"0","#     },"
"0","#     'BayesianNetwork': {"
"0","#         'n_components': [16, 32, 64],"
"0","#         'max_iter': [10, 20, 50]"
"0","#     },"
"0","#     'RVM': {"
"0","#         'kernel': ['linear', 'rbf', 'poly'],"
"0","#         'regularization': [0.001, 0.01, 0.1, 1.0]"
"0","#     }"
"0","# }"
"0",""
"0",""
"0","param_grids = {"
"0","    'LinearRegression': {"
"0","        'C': [0.01, 0.1, 1.0, 10.0, 100.0]"
"0","    },"
"0","    'SVD': {"
"0","        'n_components': [8, 16, 24, 32, 40, 48, 56, 64, 96, 128],"
"0","        'classifier': [""SVC"", ""residual""]"
"0","    },"
"0","    # 'HOSVD': {"
"0","    #     'n_components_mode1': [4, 8, 12],"
"0","    #     'n_components_mode2': [4, 8, 12],"
"0","    #     'classifier': [""SVC"", ""residual""]"
"0","    # },"
"0","    'HOSVD': {"
"0","        'n_components_mode': [4, 8, 12],"
"0","        'classifier': [""SVC"", ""residual""]"
"0","    },"
"0","    'RandomForest': {"
"0","        'n_estimators': [50, 100, 200],"
"0","        'max_depth': [None, 10, 20, 30],"
"0","        'min_samples_split': [2, 5, 10]"
"0","    },"
"0","    # 'GB': {"
"0","    #     'n_estimators': [50, 100, 200],"
"0","    #     'learning_rate': [0.01, 0.1, 0.2],"
"0","    #     'max_depth': [3, 5, 7]"
"0","    # },"
"0","    'NaiveBayes': {"
"0","        'var_smoothing': [1e-9, 1e-8, 1e-7, 1e-6]"
"0","    },"
"0","    'SVM': {"
"0","        'C': [0.1, 1, 10, 100],"
"0","        'kernel': ['linear', 'rbf', 'poly'],"
"0","        'gamma': ['scale', 'auto', 0.1, 0.01]"
"0","    },"
"0","    'KNN': {"
"0","        'n_neighbors': [3, 5, 7, 9, 11],"
"0","        'weights': ['uniform', 'distance'],"
"0","        'p': [1, 2]  # p=1 for manhattan, p=2 for euclidean"
"0","    },"
"0","    'LDA': {"
"0","        'solver': ['svd', 'lsqr', 'eigen'],"
"0","        'shrinkage': [None, 'auto', 0.1, 0.5, 0.9]"
"0","    }"
"0","}"
"0",""
"0",""
